# name: Build
# on:
#   push:
#     branches
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   sonarcloud:
#     name: SonarCloud
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
name: SonarCloud Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarQube Quality Gate
        run: |
          # Check SonarQube quality gate status and store it in a variable

      - name: Generate SonarCloud Report
        if: ${{ github.event_name == 'push' && steps.check_sonarqube.outputs.quality_gate_status == 'passed' }}
        run: |
          # Generate SonarCloud report command

      - name: Push to Main Branch
        if: ${{ github.event_name == 'push' && steps.check_sonarqube.outputs.quality_gate_status != 'passed' }}
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'your-email@example.com'
          git checkout main
          git add .
          git commit -m 'Update code after SonarQube scan'
          git push origin main

      - name: Prevent PR Merge
        if: ${{ github.event_name == 'pull_request' && steps.check_sonarqube.outputs.quality_gate_status == 'passed' }}
        run: |
          echo "SonarQube quality gate passed. Please ensure code quality before merging."

